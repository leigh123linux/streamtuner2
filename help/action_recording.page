<page	xmlns="http://projectmallard.org/1.0/"
	type="guide"
	id="recording">

<info>
	<link type="guide" xref="streams#actions"/>
	<link type="guide" xref="configuration#recording"/>
	<link type="guide" xref="index#functions"/>
	<desc>Save radio songs as MP3 files via streamripper.</desc>
</info>

<title>Recording</title>

<p>Most stations that stream MP3 or OGG music can be recorded. This is accomplished through
the commandline tool "streamripper". If you select a station a press the [record] button,
a console window should appear, where streamripper shows its progress.</p>


<section>
<title>Streamripper</title>

<p>The <cmd>xterm -e</cmd> prefix brings up the terminal popup, to follow streamrippers
progress. Remove that for silent downloads.</p>

<table shade="rows" rules="rows cols">
  <thead>  <tr><td><p>Format</p></td>     <td><p>Application</p></td></tr> </thead>
  <tr><td><p><var>audio/*</var></p></td>  <td><p><cmd>xterm -e streamripper %srv</cmd></p></td></tr>
</table>

<p>To configure a default download directory, use the <cmd>-d</cmd> option to streamripper.
For example <cmd>xterm -e "streamripper -d /media/music/"</cmd> would use an absolute path
instead of your home directory (or the current working directory).</p>
</section>


<section>
<title>fIcy/fPls</title>

<p>As alternative to streamripper, check out <link href="http://freshcode.club/projects/ficy">fIcy/fPls</link>
for recording ICEcast/SHOUTcast streaming servers.</p>

<p>It can be configured with <cmd>xterm -e "fPls %srv"</cmd> simply.</p>
</section>


<section>
<title>Youtube-DL</title>

<p>The recording settings have a specific entry for "video/youtube" URLs. To configure a specific download
directory, use <cmd>xterm -e "cd /media/music ; youtube-dl %srv"</cmd> for example. (The <cmd>cd</cmd>
trick works with streamripper too.)</p>
</section>


</page>
